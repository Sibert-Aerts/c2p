# Generated from SmallC.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\29")
        buf.write("\u017e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3")
        buf.write("#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3)\3)\3*\3")
        buf.write("*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3")
        buf.write("\60\3\60\3\61\6\61\u0120\n\61\r\61\16\61\u0121\3\61\3")
        buf.write("\61\3\62\6\62\u0127\n\62\r\62\16\62\u0128\3\62\3\62\3")
        buf.write("\63\3\63\3\63\3\63\7\63\u0131\n\63\f\63\16\63\u0134\13")
        buf.write("\63\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67")
        buf.write("\3\67\38\58\u0142\n8\38\78\u0145\n8\f8\168\u0148\138\3")
        buf.write("8\38\78\u014c\n8\f8\168\u014f\138\38\38\58\u0153\n8\3")
        buf.write("8\68\u0156\n8\r8\168\u0157\58\u015a\n8\39\59\u015d\n9")
        buf.write("\39\69\u0160\n9\r9\169\u0161\3:\3:\3:\5:\u0167\n:\3:\3")
        buf.write(":\3;\3;\3;\3;\3;\7;\u0170\n;\f;\16;\u0173\13;\3;\3;\3")
        buf.write("<\3<\3<\7<\u017a\n<\f<\16<\u017d\13<\2\2=\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write("\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[")
        buf.write("/]\60_\61a\62c\63e\64g\2i\2k\2m\2o\65q\66s\67u8w9\3\2")
        buf.write("\13\4\2\13\13\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\4\2")
        buf.write("--//\f\2$$))AA^^cdhhppttvvxx\4\2GGgg\5\2\f\f))^^\5\2\f")
        buf.write("\f$$^^\u018a\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3")
        buf.write("\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2")
        buf.write("\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2")
        buf.write("\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2")
        buf.write("#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2")
        buf.write("w\3\2\2\2\3y\3\2\2\2\5\u008c\3\2\2\2\7\u008e\3\2\2\2\t")
        buf.write("\u0090\3\2\2\2\13\u0092\3\2\2\2\r\u0094\3\2\2\2\17\u0096")
        buf.write("\3\2\2\2\21\u0098\3\2\2\2\23\u009b\3\2\2\2\25\u00a0\3")
        buf.write("\2\2\2\27\u00a6\3\2\2\2\31\u00ac\3\2\2\2\33\u00ae\3\2")
        buf.write("\2\2\35\u00b7\3\2\2\2\37\u00be\3\2\2\2!\u00c3\3\2\2\2")
        buf.write("#\u00c8\3\2\2\2%\u00cc\3\2\2\2\'\u00d2\3\2\2\2)\u00d8")
        buf.write("\3\2\2\2+\u00da\3\2\2\2-\u00dc\3\2\2\2/\u00de\3\2\2\2")
        buf.write("\61\u00e0\3\2\2\2\63\u00e2\3\2\2\2\65\u00e5\3\2\2\2\67")
        buf.write("\u00e8\3\2\2\29\u00eb\3\2\2\2;\u00ee\3\2\2\2=\u00f0\3")
        buf.write("\2\2\2?\u00f2\3\2\2\2A\u00f5\3\2\2\2C\u00f8\3\2\2\2E\u00fa")
        buf.write("\3\2\2\2G\u00fc\3\2\2\2I\u00fe\3\2\2\2K\u0100\3\2\2\2")
        buf.write("M\u0103\3\2\2\2O\u0106\3\2\2\2Q\u0108\3\2\2\2S\u010a\3")
        buf.write("\2\2\2U\u010c\3\2\2\2W\u010f\3\2\2\2Y\u0112\3\2\2\2[\u0115")
        buf.write("\3\2\2\2]\u0118\3\2\2\2_\u011b\3\2\2\2a\u011f\3\2\2\2")
        buf.write("c\u0126\3\2\2\2e\u012c\3\2\2\2g\u0137\3\2\2\2i\u0139\3")
        buf.write("\2\2\2k\u013b\3\2\2\2m\u013d\3\2\2\2o\u0141\3\2\2\2q\u015c")
        buf.write("\3\2\2\2s\u0163\3\2\2\2u\u016a\3\2\2\2w\u0176\3\2\2\2")
        buf.write("yz\7%\2\2z{\7k\2\2{|\7p\2\2|}\7e\2\2}~\7n\2\2~\177\7w")
        buf.write("\2\2\177\u0080\7f\2\2\u0080\u0081\7g\2\2\u0081\u0082\7")
        buf.write("\"\2\2\u0082\u0083\7>\2\2\u0083\u0084\7u\2\2\u0084\u0085")
        buf.write("\7v\2\2\u0085\u0086\7f\2\2\u0086\u0087\7k\2\2\u0087\u0088")
        buf.write("\7q\2\2\u0088\u0089\7\60\2\2\u0089\u008a\7j\2\2\u008a")
        buf.write("\u008b\7@\2\2\u008b\4\3\2\2\2\u008c\u008d\7*\2\2\u008d")
        buf.write("\6\3\2\2\2\u008e\u008f\7+\2\2\u008f\b\3\2\2\2\u0090\u0091")
        buf.write("\7.\2\2\u0091\n\3\2\2\2\u0092\u0093\7}\2\2\u0093\f\3\2")
        buf.write("\2\2\u0094\u0095\7\177\2\2\u0095\16\3\2\2\2\u0096\u0097")
        buf.write("\7?\2\2\u0097\20\3\2\2\2\u0098\u0099\7k\2\2\u0099\u009a")
        buf.write("\7h\2\2\u009a\22\3\2\2\2\u009b\u009c\7g\2\2\u009c\u009d")
        buf.write("\7n\2\2\u009d\u009e\7u\2\2\u009e\u009f\7g\2\2\u009f\24")
        buf.write("\3\2\2\2\u00a0\u00a1\7y\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3")
        buf.write("\7k\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7g\2\2\u00a5\26")
        buf.write("\3\2\2\2\u00a6\u00a7\7d\2\2\u00a7\u00a8\7t\2\2\u00a8\u00a9")
        buf.write("\7g\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab\7m\2\2\u00ab\30")
        buf.write("\3\2\2\2\u00ac\u00ad\7=\2\2\u00ad\32\3\2\2\2\u00ae\u00af")
        buf.write("\7e\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7p\2\2\u00b1\u00b2")
        buf.write("\7v\2\2\u00b2\u00b3\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5")
        buf.write("\7w\2\2\u00b5\u00b6\7g\2\2\u00b6\34\3\2\2\2\u00b7\u00b8")
        buf.write("\7t\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba\7v\2\2\u00ba\u00bb")
        buf.write("\7w\2\2\u00bb\u00bc\7t\2\2\u00bc\u00bd\7p\2\2\u00bd\36")
        buf.write("\3\2\2\2\u00be\u00bf\7x\2\2\u00bf\u00c0\7q\2\2\u00c0\u00c1")
        buf.write("\7k\2\2\u00c1\u00c2\7f\2\2\u00c2 \3\2\2\2\u00c3\u00c4")
        buf.write("\7e\2\2\u00c4\u00c5\7j\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7")
        buf.write("\7t\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca")
        buf.write("\7p\2\2\u00ca\u00cb\7v\2\2\u00cb$\3\2\2\2\u00cc\u00cd")
        buf.write("\7h\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf\7q\2\2\u00cf\u00d0")
        buf.write("\7c\2\2\u00d0\u00d1\7v\2\2\u00d1&\3\2\2\2\u00d2\u00d3")
        buf.write("\7e\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7p\2\2\u00d5\u00d6")
        buf.write("\7u\2\2\u00d6\u00d7\7v\2\2\u00d7(\3\2\2\2\u00d8\u00d9")
        buf.write("\7]\2\2\u00d9*\3\2\2\2\u00da\u00db\7_\2\2\u00db,\3\2\2")
        buf.write("\2\u00dc\u00dd\7,\2\2\u00dd.\3\2\2\2\u00de\u00df\7A\2")
        buf.write("\2\u00df\60\3\2\2\2\u00e0\u00e1\7<\2\2\u00e1\62\3\2\2")
        buf.write("\2\u00e2\u00e3\7~\2\2\u00e3\u00e4\7~\2\2\u00e4\64\3\2")
        buf.write("\2\2\u00e5\u00e6\7(\2\2\u00e6\u00e7\7(\2\2\u00e7\66\3")
        buf.write("\2\2\2\u00e8\u00e9\7?\2\2\u00e9\u00ea\7?\2\2\u00ea8\3")
        buf.write("\2\2\2\u00eb\u00ec\7#\2\2\u00ec\u00ed\7?\2\2\u00ed:\3")
        buf.write("\2\2\2\u00ee\u00ef\7>\2\2\u00ef<\3\2\2\2\u00f0\u00f1\7")
        buf.write("@\2\2\u00f1>\3\2\2\2\u00f2\u00f3\7>\2\2\u00f3\u00f4\7")
        buf.write("?\2\2\u00f4@\3\2\2\2\u00f5\u00f6\7@\2\2\u00f6\u00f7\7")
        buf.write("?\2\2\u00f7B\3\2\2\2\u00f8\u00f9\7-\2\2\u00f9D\3\2\2\2")
        buf.write("\u00fa\u00fb\7/\2\2\u00fbF\3\2\2\2\u00fc\u00fd\7\61\2")
        buf.write("\2\u00fdH\3\2\2\2\u00fe\u00ff\7\'\2\2\u00ffJ\3\2\2\2\u0100")
        buf.write("\u0101\7-\2\2\u0101\u0102\7-\2\2\u0102L\3\2\2\2\u0103")
        buf.write("\u0104\7/\2\2\u0104\u0105\7/\2\2\u0105N\3\2\2\2\u0106")
        buf.write("\u0107\7(\2\2\u0107P\3\2\2\2\u0108\u0109\7#\2\2\u0109")
        buf.write("R\3\2\2\2\u010a\u010b\7\60\2\2\u010bT\3\2\2\2\u010c\u010d")
        buf.write("\7/\2\2\u010d\u010e\7@\2\2\u010eV\3\2\2\2\u010f\u0110")
        buf.write("\7,\2\2\u0110\u0111\7?\2\2\u0111X\3\2\2\2\u0112\u0113")
        buf.write("\7\61\2\2\u0113\u0114\7?\2\2\u0114Z\3\2\2\2\u0115\u0116")
        buf.write("\7\'\2\2\u0116\u0117\7?\2\2\u0117\\\3\2\2\2\u0118\u0119")
        buf.write("\7-\2\2\u0119\u011a\7?\2\2\u011a^\3\2\2\2\u011b\u011c")
        buf.write("\7/\2\2\u011c\u011d\7?\2\2\u011d`\3\2\2\2\u011e\u0120")
        buf.write("\t\2\2\2\u011f\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121")
        buf.write("\u011f\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0123\3\2\2\2")
        buf.write("\u0123\u0124\b\61\2\2\u0124b\3\2\2\2\u0125\u0127\t\3\2")
        buf.write("\2\u0126\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u0126")
        buf.write("\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012a\3\2\2\2\u012a")
        buf.write("\u012b\b\62\2\2\u012bd\3\2\2\2\u012c\u012d\7\61\2\2\u012d")
        buf.write("\u012e\7\61\2\2\u012e\u0132\3\2\2\2\u012f\u0131\n\3\2")
        buf.write("\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2\u0132\u0130")
        buf.write("\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0135\3\2\2\2\u0134")
        buf.write("\u0132\3\2\2\2\u0135\u0136\b\63\2\2\u0136f\3\2\2\2\u0137")
        buf.write("\u0138\t\4\2\2\u0138h\3\2\2\2\u0139\u013a\t\5\2\2\u013a")
        buf.write("j\3\2\2\2\u013b\u013c\t\6\2\2\u013cl\3\2\2\2\u013d\u013e")
        buf.write("\7^\2\2\u013e\u013f\t\7\2\2\u013fn\3\2\2\2\u0140\u0142")
        buf.write("\5k\66\2\u0141\u0140\3\2\2\2\u0141\u0142\3\2\2\2\u0142")
        buf.write("\u0146\3\2\2\2\u0143\u0145\5i\65\2\u0144\u0143\3\2\2\2")
        buf.write("\u0145\u0148\3\2\2\2\u0146\u0144\3\2\2\2\u0146\u0147\3")
        buf.write("\2\2\2\u0147\u0149\3\2\2\2\u0148\u0146\3\2\2\2\u0149\u014d")
        buf.write("\7\60\2\2\u014a\u014c\5i\65\2\u014b\u014a\3\2\2\2\u014c")
        buf.write("\u014f\3\2\2\2\u014d\u014b\3\2\2\2\u014d\u014e\3\2\2\2")
        buf.write("\u014e\u0159\3\2\2\2\u014f\u014d\3\2\2\2\u0150\u0152\t")
        buf.write("\b\2\2\u0151\u0153\5k\66\2\u0152\u0151\3\2\2\2\u0152\u0153")
        buf.write("\3\2\2\2\u0153\u0155\3\2\2\2\u0154\u0156\5i\65\2\u0155")
        buf.write("\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155\3\2\2\2")
        buf.write("\u0157\u0158\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0150\3")
        buf.write("\2\2\2\u0159\u015a\3\2\2\2\u015ap\3\2\2\2\u015b\u015d")
        buf.write("\5k\66\2\u015c\u015b\3\2\2\2\u015c\u015d\3\2\2\2\u015d")
        buf.write("\u015f\3\2\2\2\u015e\u0160\5i\65\2\u015f\u015e\3\2\2\2")
        buf.write("\u0160\u0161\3\2\2\2\u0161\u015f\3\2\2\2\u0161\u0162\3")
        buf.write("\2\2\2\u0162r\3\2\2\2\u0163\u0166\7)\2\2\u0164\u0167\n")
        buf.write("\t\2\2\u0165\u0167\5m\67\2\u0166\u0164\3\2\2\2\u0166\u0165")
        buf.write("\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0169\7)\2\2\u0169")
        buf.write("t\3\2\2\2\u016a\u0171\7$\2\2\u016b\u0170\5m\67\2\u016c")
        buf.write("\u0170\n\n\2\2\u016d\u016e\7^\2\2\u016e\u0170\7\f\2\2")
        buf.write("\u016f\u016b\3\2\2\2\u016f\u016c\3\2\2\2\u016f\u016d\3")
        buf.write("\2\2\2\u0170\u0173\3\2\2\2\u0171\u016f\3\2\2\2\u0171\u0172")
        buf.write("\3\2\2\2\u0172\u0174\3\2\2\2\u0173\u0171\3\2\2\2\u0174")
        buf.write("\u0175\7$\2\2\u0175v\3\2\2\2\u0176\u017b\5g\64\2\u0177")
        buf.write("\u017a\5g\64\2\u0178\u017a\5i\65\2\u0179\u0177\3\2\2\2")
        buf.write("\u0179\u0178\3\2\2\2\u017a\u017d\3\2\2\2\u017b\u0179\3")
        buf.write("\2\2\2\u017b\u017c\3\2\2\2\u017cx\3\2\2\2\u017d\u017b")
        buf.write("\3\2\2\2\23\2\u0121\u0128\u0132\u0141\u0146\u014d\u0152")
        buf.write("\u0157\u0159\u015c\u0161\u0166\u016f\u0171\u0179\u017b")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    Whitespace = 48
    Newline = 49
    LineComment = 50
    FloatingConstant = 51
    IntegerConstant = 52
    CharacterConstant = 53
    StringConstant = 54
    Identifier = 55

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include <stdio.h>'", "'('", "')'", "','", "'{'", "'}'", "'='", 
            "'if'", "'else'", "'while'", "'break'", "';'", "'continue'", 
            "'return'", "'void'", "'char'", "'int'", "'float'", "'const'", 
            "'['", "']'", "'*'", "'?'", "':'", "'||'", "'&&'", "'=='", "'!='", 
            "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'/'", "'%'", "'++'", 
            "'--'", "'&'", "'!'", "'.'", "'->'", "'*='", "'/='", "'%='", 
            "'+='", "'-='" ]

    symbolicNames = [ "<INVALID>",
            "Whitespace", "Newline", "LineComment", "FloatingConstant", 
            "IntegerConstant", "CharacterConstant", "StringConstant", "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "Whitespace", "Newline", "LineComment", 
                  "Letter", "Digit", "Sign", "EscapeSequence", "FloatingConstant", 
                  "IntegerConstant", "CharacterConstant", "StringConstant", 
                  "Identifier" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


