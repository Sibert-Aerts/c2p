# Generated from SmallC.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\29")
        buf.write("\u0169\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20")
        buf.write("\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33")
        buf.write("\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3")
        buf.write("&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3")
        buf.write("-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\6\60\u010b\n\60\r\60\16")
        buf.write("\60\u010c\3\60\3\60\3\61\6\61\u0112\n\61\r\61\16\61\u0113")
        buf.write("\3\61\3\61\3\62\3\62\3\62\3\62\7\62\u011c\n\62\f\62\16")
        buf.write("\62\u011f\13\62\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65")
        buf.write("\3\66\5\66\u012a\n\66\3\66\7\66\u012d\n\66\f\66\16\66")
        buf.write("\u0130\13\66\3\66\3\66\7\66\u0134\n\66\f\66\16\66\u0137")
        buf.write("\13\66\3\66\3\66\5\66\u013b\n\66\3\66\6\66\u013e\n\66")
        buf.write("\r\66\16\66\u013f\5\66\u0142\n\66\3\67\5\67\u0145\n\67")
        buf.write("\3\67\6\67\u0148\n\67\r\67\16\67\u0149\38\38\38\58\u014f")
        buf.write("\n8\38\38\39\39\39\39\39\79\u0158\n9\f9\169\u015b\139")
        buf.write("\39\39\3:\3:\3:\3;\3;\3;\7;\u0165\n;\f;\16;\u0168\13;")
        buf.write("\2\2<\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\2g\2i\2k\64m\65o\66")
        buf.write("q\67s8u9\3\2\13\4\2\13\13\"\"\4\2\f\f\17\17\5\2C\\aac")
        buf.write("|\3\2\62;\4\2--//\4\2GGgg\6\2\f\f\17\17))^^\6\2\f\f\17")
        buf.write("\17$$^^\f\2$$))AA^^cdhhppttvvxx\u0176\2\3\3\2\2\2\2\5")
        buf.write("\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2")
        buf.write("\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2")
        buf.write("\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2")
        buf.write("\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2")
        buf.write("\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61")
        buf.write("\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2")
        buf.write("\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2")
        buf.write("\2a\3\2\2\2\2c\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2")
        buf.write("\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\3w\3\2\2\2\5y\3\2")
        buf.write("\2\2\7{\3\2\2\2\t}\3\2\2\2\13\177\3\2\2\2\r\u0081\3\2")
        buf.write("\2\2\17\u0083\3\2\2\2\21\u0086\3\2\2\2\23\u008b\3\2\2")
        buf.write("\2\25\u0091\3\2\2\2\27\u0097\3\2\2\2\31\u0099\3\2\2\2")
        buf.write("\33\u00a2\3\2\2\2\35\u00a9\3\2\2\2\37\u00ae\3\2\2\2!\u00b3")
        buf.write("\3\2\2\2#\u00b7\3\2\2\2%\u00bd\3\2\2\2\'\u00c3\3\2\2\2")
        buf.write(")\u00c5\3\2\2\2+\u00c7\3\2\2\2-\u00c9\3\2\2\2/\u00cb\3")
        buf.write("\2\2\2\61\u00cd\3\2\2\2\63\u00d0\3\2\2\2\65\u00d3\3\2")
        buf.write("\2\2\67\u00d6\3\2\2\29\u00d9\3\2\2\2;\u00db\3\2\2\2=\u00dd")
        buf.write("\3\2\2\2?\u00e0\3\2\2\2A\u00e3\3\2\2\2C\u00e5\3\2\2\2")
        buf.write("E\u00e7\3\2\2\2G\u00e9\3\2\2\2I\u00eb\3\2\2\2K\u00ee\3")
        buf.write("\2\2\2M\u00f1\3\2\2\2O\u00f3\3\2\2\2Q\u00f5\3\2\2\2S\u00f7")
        buf.write("\3\2\2\2U\u00fa\3\2\2\2W\u00fd\3\2\2\2Y\u0100\3\2\2\2")
        buf.write("[\u0103\3\2\2\2]\u0106\3\2\2\2_\u010a\3\2\2\2a\u0111\3")
        buf.write("\2\2\2c\u0117\3\2\2\2e\u0122\3\2\2\2g\u0124\3\2\2\2i\u0126")
        buf.write("\3\2\2\2k\u0129\3\2\2\2m\u0144\3\2\2\2o\u014b\3\2\2\2")
        buf.write("q\u0152\3\2\2\2s\u015e\3\2\2\2u\u0161\3\2\2\2wx\7*\2\2")
        buf.write("x\4\3\2\2\2yz\7+\2\2z\6\3\2\2\2{|\7.\2\2|\b\3\2\2\2}~")
        buf.write("\7}\2\2~\n\3\2\2\2\177\u0080\7\177\2\2\u0080\f\3\2\2\2")
        buf.write("\u0081\u0082\7?\2\2\u0082\16\3\2\2\2\u0083\u0084\7k\2")
        buf.write("\2\u0084\u0085\7h\2\2\u0085\20\3\2\2\2\u0086\u0087\7g")
        buf.write("\2\2\u0087\u0088\7n\2\2\u0088\u0089\7u\2\2\u0089\u008a")
        buf.write("\7g\2\2\u008a\22\3\2\2\2\u008b\u008c\7y\2\2\u008c\u008d")
        buf.write("\7j\2\2\u008d\u008e\7k\2\2\u008e\u008f\7n\2\2\u008f\u0090")
        buf.write("\7g\2\2\u0090\24\3\2\2\2\u0091\u0092\7d\2\2\u0092\u0093")
        buf.write("\7t\2\2\u0093\u0094\7g\2\2\u0094\u0095\7c\2\2\u0095\u0096")
        buf.write("\7m\2\2\u0096\26\3\2\2\2\u0097\u0098\7=\2\2\u0098\30\3")
        buf.write("\2\2\2\u0099\u009a\7e\2\2\u009a\u009b\7q\2\2\u009b\u009c")
        buf.write("\7p\2\2\u009c\u009d\7v\2\2\u009d\u009e\7k\2\2\u009e\u009f")
        buf.write("\7p\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7g\2\2\u00a1\32")
        buf.write("\3\2\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7g\2\2\u00a4\u00a5")
        buf.write("\7v\2\2\u00a5\u00a6\7w\2\2\u00a6\u00a7\7t\2\2\u00a7\u00a8")
        buf.write("\7p\2\2\u00a8\34\3\2\2\2\u00a9\u00aa\7x\2\2\u00aa\u00ab")
        buf.write("\7q\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7f\2\2\u00ad\36")
        buf.write("\3\2\2\2\u00ae\u00af\7e\2\2\u00af\u00b0\7j\2\2\u00b0\u00b1")
        buf.write("\7c\2\2\u00b1\u00b2\7t\2\2\u00b2 \3\2\2\2\u00b3\u00b4")
        buf.write("\7k\2\2\u00b4\u00b5\7p\2\2\u00b5\u00b6\7v\2\2\u00b6\"")
        buf.write("\3\2\2\2\u00b7\u00b8\7h\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba")
        buf.write("\7q\2\2\u00ba\u00bb\7c\2\2\u00bb\u00bc\7v\2\2\u00bc$\3")
        buf.write("\2\2\2\u00bd\u00be\7e\2\2\u00be\u00bf\7q\2\2\u00bf\u00c0")
        buf.write("\7p\2\2\u00c0\u00c1\7u\2\2\u00c1\u00c2\7v\2\2\u00c2&\3")
        buf.write("\2\2\2\u00c3\u00c4\7]\2\2\u00c4(\3\2\2\2\u00c5\u00c6\7")
        buf.write("_\2\2\u00c6*\3\2\2\2\u00c7\u00c8\7,\2\2\u00c8,\3\2\2\2")
        buf.write("\u00c9\u00ca\7A\2\2\u00ca.\3\2\2\2\u00cb\u00cc\7<\2\2")
        buf.write("\u00cc\60\3\2\2\2\u00cd\u00ce\7~\2\2\u00ce\u00cf\7~\2")
        buf.write("\2\u00cf\62\3\2\2\2\u00d0\u00d1\7(\2\2\u00d1\u00d2\7(")
        buf.write("\2\2\u00d2\64\3\2\2\2\u00d3\u00d4\7?\2\2\u00d4\u00d5\7")
        buf.write("?\2\2\u00d5\66\3\2\2\2\u00d6\u00d7\7#\2\2\u00d7\u00d8")
        buf.write("\7?\2\2\u00d88\3\2\2\2\u00d9\u00da\7>\2\2\u00da:\3\2\2")
        buf.write("\2\u00db\u00dc\7@\2\2\u00dc<\3\2\2\2\u00dd\u00de\7>\2")
        buf.write("\2\u00de\u00df\7?\2\2\u00df>\3\2\2\2\u00e0\u00e1\7@\2")
        buf.write("\2\u00e1\u00e2\7?\2\2\u00e2@\3\2\2\2\u00e3\u00e4\7-\2")
        buf.write("\2\u00e4B\3\2\2\2\u00e5\u00e6\7/\2\2\u00e6D\3\2\2\2\u00e7")
        buf.write("\u00e8\7\61\2\2\u00e8F\3\2\2\2\u00e9\u00ea\7\'\2\2\u00ea")
        buf.write("H\3\2\2\2\u00eb\u00ec\7-\2\2\u00ec\u00ed\7-\2\2\u00ed")
        buf.write("J\3\2\2\2\u00ee\u00ef\7/\2\2\u00ef\u00f0\7/\2\2\u00f0")
        buf.write("L\3\2\2\2\u00f1\u00f2\7(\2\2\u00f2N\3\2\2\2\u00f3\u00f4")
        buf.write("\7#\2\2\u00f4P\3\2\2\2\u00f5\u00f6\7\60\2\2\u00f6R\3\2")
        buf.write("\2\2\u00f7\u00f8\7/\2\2\u00f8\u00f9\7@\2\2\u00f9T\3\2")
        buf.write("\2\2\u00fa\u00fb\7,\2\2\u00fb\u00fc\7?\2\2\u00fcV\3\2")
        buf.write("\2\2\u00fd\u00fe\7\61\2\2\u00fe\u00ff\7?\2\2\u00ffX\3")
        buf.write("\2\2\2\u0100\u0101\7\'\2\2\u0101\u0102\7?\2\2\u0102Z\3")
        buf.write("\2\2\2\u0103\u0104\7-\2\2\u0104\u0105\7?\2\2\u0105\\\3")
        buf.write("\2\2\2\u0106\u0107\7/\2\2\u0107\u0108\7?\2\2\u0108^\3")
        buf.write("\2\2\2\u0109\u010b\t\2\2\2\u010a\u0109\3\2\2\2\u010b\u010c")
        buf.write("\3\2\2\2\u010c\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d")
        buf.write("\u010e\3\2\2\2\u010e\u010f\b\60\2\2\u010f`\3\2\2\2\u0110")
        buf.write("\u0112\t\3\2\2\u0111\u0110\3\2\2\2\u0112\u0113\3\2\2\2")
        buf.write("\u0113\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0115\3")
        buf.write("\2\2\2\u0115\u0116\b\61\2\2\u0116b\3\2\2\2\u0117\u0118")
        buf.write("\7\61\2\2\u0118\u0119\7\61\2\2\u0119\u011d\3\2\2\2\u011a")
        buf.write("\u011c\n\3\2\2\u011b\u011a\3\2\2\2\u011c\u011f\3\2\2\2")
        buf.write("\u011d\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u0120\3")
        buf.write("\2\2\2\u011f\u011d\3\2\2\2\u0120\u0121\b\62\2\2\u0121")
        buf.write("d\3\2\2\2\u0122\u0123\t\4\2\2\u0123f\3\2\2\2\u0124\u0125")
        buf.write("\t\5\2\2\u0125h\3\2\2\2\u0126\u0127\t\6\2\2\u0127j\3\2")
        buf.write("\2\2\u0128\u012a\5i\65\2\u0129\u0128\3\2\2\2\u0129\u012a")
        buf.write("\3\2\2\2\u012a\u012e\3\2\2\2\u012b\u012d\5g\64\2\u012c")
        buf.write("\u012b\3\2\2\2\u012d\u0130\3\2\2\2\u012e\u012c\3\2\2\2")
        buf.write("\u012e\u012f\3\2\2\2\u012f\u0131\3\2\2\2\u0130\u012e\3")
        buf.write("\2\2\2\u0131\u0135\7\60\2\2\u0132\u0134\5g\64\2\u0133")
        buf.write("\u0132\3\2\2\2\u0134\u0137\3\2\2\2\u0135\u0133\3\2\2\2")
        buf.write("\u0135\u0136\3\2\2\2\u0136\u0141\3\2\2\2\u0137\u0135\3")
        buf.write("\2\2\2\u0138\u013a\t\7\2\2\u0139\u013b\5i\65\2\u013a\u0139")
        buf.write("\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013d\3\2\2\2\u013c")
        buf.write("\u013e\5g\64\2\u013d\u013c\3\2\2\2\u013e\u013f\3\2\2\2")
        buf.write("\u013f\u013d\3\2\2\2\u013f\u0140\3\2\2\2\u0140\u0142\3")
        buf.write("\2\2\2\u0141\u0138\3\2\2\2\u0141\u0142\3\2\2\2\u0142l")
        buf.write("\3\2\2\2\u0143\u0145\5i\65\2\u0144\u0143\3\2\2\2\u0144")
        buf.write("\u0145\3\2\2\2\u0145\u0147\3\2\2\2\u0146\u0148\5g\64\2")
        buf.write("\u0147\u0146\3\2\2\2\u0148\u0149\3\2\2\2\u0149\u0147\3")
        buf.write("\2\2\2\u0149\u014a\3\2\2\2\u014an\3\2\2\2\u014b\u014e")
        buf.write("\7)\2\2\u014c\u014f\n\b\2\2\u014d\u014f\5s:\2\u014e\u014c")
        buf.write("\3\2\2\2\u014e\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150")
        buf.write("\u0151\7)\2\2\u0151p\3\2\2\2\u0152\u0159\7$\2\2\u0153")
        buf.write("\u0158\n\t\2\2\u0154\u0158\5s:\2\u0155\u0156\7^\2\2\u0156")
        buf.write("\u0158\7\f\2\2\u0157\u0153\3\2\2\2\u0157\u0154\3\2\2\2")
        buf.write("\u0157\u0155\3\2\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3")
        buf.write("\2\2\2\u0159\u015a\3\2\2\2\u015a\u015c\3\2\2\2\u015b\u0159")
        buf.write("\3\2\2\2\u015c\u015d\7$\2\2\u015dr\3\2\2\2\u015e\u015f")
        buf.write("\7^\2\2\u015f\u0160\t\n\2\2\u0160t\3\2\2\2\u0161\u0166")
        buf.write("\5e\63\2\u0162\u0165\5e\63\2\u0163\u0165\5g\64\2\u0164")
        buf.write("\u0162\3\2\2\2\u0164\u0163\3\2\2\2\u0165\u0168\3\2\2\2")
        buf.write("\u0166\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167v\3\2\2")
        buf.write("\2\u0168\u0166\3\2\2\2\23\2\u010c\u0113\u011d\u0129\u012e")
        buf.write("\u0135\u013a\u013f\u0141\u0144\u0149\u014e\u0157\u0159")
        buf.write("\u0164\u0166\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    Whitespace = 47
    Newline = 48
    LineComment = 49
    FloatingConstant = 50
    IntegerConstant = 51
    CharacterConstant = 52
    StringConstant = 53
    EscapeSequence = 54
    Identifier = 55

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'{'", "'}'", "'='", "'if'", "'else'", 
            "'while'", "'break'", "';'", "'continue'", "'return'", "'void'", 
            "'char'", "'int'", "'float'", "'const'", "'['", "']'", "'*'", 
            "'?'", "':'", "'||'", "'&&'", "'=='", "'!='", "'<'", "'>'", 
            "'<='", "'>='", "'+'", "'-'", "'/'", "'%'", "'++'", "'--'", 
            "'&'", "'!'", "'.'", "'->'", "'*='", "'/='", "'%='", "'+='", 
            "'-='" ]

    symbolicNames = [ "<INVALID>",
            "Whitespace", "Newline", "LineComment", "FloatingConstant", 
            "IntegerConstant", "CharacterConstant", "StringConstant", "EscapeSequence", 
            "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "Whitespace", "Newline", "LineComment", 
                  "Letter", "Digit", "Sign", "FloatingConstant", "IntegerConstant", 
                  "CharacterConstant", "StringConstant", "EscapeSequence", 
                  "Identifier" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


