# Generated from SmallC.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\29")
        buf.write("\u0190\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5")
        buf.write("\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27")
        buf.write("\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 ")
        buf.write("\3 \3!\3!\3\"\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3")
        buf.write("-\3.\3.\3.\3/\6/\u011f\n/\r/\16/\u0120\3/\3/\3\60\6\60")
        buf.write("\u0126\n\60\r\60\16\60\u0127\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\61\7\61\u0130\n\61\f\61\16\61\u0133\13\61\3\61\3\61")
        buf.write("\3\62\3\62\3\62\3\62\7\62\u013b\n\62\f\62\16\62\u013e")
        buf.write("\13\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3")
        buf.write("\65\3\65\3\66\3\66\3\66\3\67\7\67\u014f\n\67\f\67\16\67")
        buf.write("\u0152\13\67\3\67\3\67\7\67\u0156\n\67\f\67\16\67\u0159")
        buf.write("\13\67\3\67\3\67\5\67\u015d\n\67\3\67\6\67\u0160\n\67")
        buf.write("\r\67\16\67\u0161\5\67\u0164\n\67\38\68\u0167\n8\r8\16")
        buf.write("8\u0168\39\39\39\59\u016e\n9\39\39\3:\3:\3:\3:\3:\7:\u0177")
        buf.write("\n:\f:\16:\u017a\13:\3:\3:\3;\3;\3;\3;\3;\3;\3;\3;\3;")
        buf.write("\5;\u0187\n;\3<\3<\3<\7<\u018c\n<\f<\16<\u018f\13<\3\u013c")
        buf.write("\2=\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r")
        buf.write("\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\2g\2i\2k\2m\64o\65q")
        buf.write("\66s\67u8w9\3\2\13\4\2\13\13\"\"\4\2\f\f\17\17\5\2C\\")
        buf.write("aac|\3\2\62;\4\2--//\f\2$$))AA^^cdhhppttvvxx\4\2GGgg\5")
        buf.write("\2\f\f))^^\5\2\f\f$$^^\u019c\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2")
        buf.write("\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3")
        buf.write("\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y")
        buf.write("\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2")
        buf.write("c\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2")
        buf.write("\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5\u008c\3\2\2\2\7\u008e")
        buf.write("\3\2\2\2\t\u0090\3\2\2\2\13\u0092\3\2\2\2\r\u0094\3\2")
        buf.write("\2\2\17\u0096\3\2\2\2\21\u0098\3\2\2\2\23\u009b\3\2\2")
        buf.write("\2\25\u00a0\3\2\2\2\27\u00a6\3\2\2\2\31\u00aa\3\2\2\2")
        buf.write("\33\u00b0\3\2\2\2\35\u00b9\3\2\2\2\37\u00c0\3\2\2\2!\u00c5")
        buf.write("\3\2\2\2#\u00ca\3\2\2\2%\u00ce\3\2\2\2\'\u00d4\3\2\2\2")
        buf.write(")\u00da\3\2\2\2+\u00df\3\2\2\2-\u00e1\3\2\2\2/\u00e3\3")
        buf.write("\2\2\2\61\u00e5\3\2\2\2\63\u00e7\3\2\2\2\65\u00e9\3\2")
        buf.write("\2\2\67\u00eb\3\2\2\29\u00ee\3\2\2\2;\u00f1\3\2\2\2=\u00f4")
        buf.write("\3\2\2\2?\u00f7\3\2\2\2A\u00f9\3\2\2\2C\u00fb\3\2\2\2")
        buf.write("E\u00fe\3\2\2\2G\u0101\3\2\2\2I\u0103\3\2\2\2K\u0105\3")
        buf.write("\2\2\2M\u0107\3\2\2\2O\u010a\3\2\2\2Q\u010d\3\2\2\2S\u010f")
        buf.write("\3\2\2\2U\u0111\3\2\2\2W\u0114\3\2\2\2Y\u0117\3\2\2\2")
        buf.write("[\u011a\3\2\2\2]\u011e\3\2\2\2_\u0125\3\2\2\2a\u012b\3")
        buf.write("\2\2\2c\u0136\3\2\2\2e\u0144\3\2\2\2g\u0146\3\2\2\2i\u0148")
        buf.write("\3\2\2\2k\u014a\3\2\2\2m\u0150\3\2\2\2o\u0166\3\2\2\2")
        buf.write("q\u016a\3\2\2\2s\u0171\3\2\2\2u\u0186\3\2\2\2w\u0188\3")
        buf.write("\2\2\2yz\7%\2\2z{\7k\2\2{|\7p\2\2|}\7e\2\2}~\7n\2\2~\177")
        buf.write("\7w\2\2\177\u0080\7f\2\2\u0080\u0081\7g\2\2\u0081\u0082")
        buf.write("\7\"\2\2\u0082\u0083\7>\2\2\u0083\u0084\7u\2\2\u0084\u0085")
        buf.write("\7v\2\2\u0085\u0086\7f\2\2\u0086\u0087\7k\2\2\u0087\u0088")
        buf.write("\7q\2\2\u0088\u0089\7\60\2\2\u0089\u008a\7j\2\2\u008a")
        buf.write("\u008b\7@\2\2\u008b\4\3\2\2\2\u008c\u008d\7*\2\2\u008d")
        buf.write("\6\3\2\2\2\u008e\u008f\7+\2\2\u008f\b\3\2\2\2\u0090\u0091")
        buf.write("\7=\2\2\u0091\n\3\2\2\2\u0092\u0093\7.\2\2\u0093\f\3\2")
        buf.write("\2\2\u0094\u0095\7}\2\2\u0095\16\3\2\2\2\u0096\u0097\7")
        buf.write("\177\2\2\u0097\20\3\2\2\2\u0098\u0099\7k\2\2\u0099\u009a")
        buf.write("\7h\2\2\u009a\22\3\2\2\2\u009b\u009c\7g\2\2\u009c\u009d")
        buf.write("\7n\2\2\u009d\u009e\7u\2\2\u009e\u009f\7g\2\2\u009f\24")
        buf.write("\3\2\2\2\u00a0\u00a1\7y\2\2\u00a1\u00a2\7j\2\2\u00a2\u00a3")
        buf.write("\7k\2\2\u00a3\u00a4\7n\2\2\u00a4\u00a5\7g\2\2\u00a5\26")
        buf.write("\3\2\2\2\u00a6\u00a7\7h\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9")
        buf.write("\7t\2\2\u00a9\30\3\2\2\2\u00aa\u00ab\7d\2\2\u00ab\u00ac")
        buf.write("\7t\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af")
        buf.write("\7m\2\2\u00af\32\3\2\2\2\u00b0\u00b1\7e\2\2\u00b1\u00b2")
        buf.write("\7q\2\2\u00b2\u00b3\7p\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5")
        buf.write("\7k\2\2\u00b5\u00b6\7p\2\2\u00b6\u00b7\7w\2\2\u00b7\u00b8")
        buf.write("\7g\2\2\u00b8\34\3\2\2\2\u00b9\u00ba\7t\2\2\u00ba\u00bb")
        buf.write("\7g\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd\7w\2\2\u00bd\u00be")
        buf.write("\7t\2\2\u00be\u00bf\7p\2\2\u00bf\36\3\2\2\2\u00c0\u00c1")
        buf.write("\7x\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4")
        buf.write("\7f\2\2\u00c4 \3\2\2\2\u00c5\u00c6\7e\2\2\u00c6\u00c7")
        buf.write("\7j\2\2\u00c7\u00c8\7c\2\2\u00c8\u00c9\7t\2\2\u00c9\"")
        buf.write("\3\2\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd")
        buf.write("\7v\2\2\u00cd$\3\2\2\2\u00ce\u00cf\7h\2\2\u00cf\u00d0")
        buf.write("\7n\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3")
        buf.write("\7v\2\2\u00d3&\3\2\2\2\u00d4\u00d5\7e\2\2\u00d5\u00d6")
        buf.write("\7q\2\2\u00d6\u00d7\7p\2\2\u00d7\u00d8\7u\2\2\u00d8\u00d9")
        buf.write("\7v\2\2\u00d9(\3\2\2\2\u00da\u00db\7d\2\2\u00db\u00dc")
        buf.write("\7q\2\2\u00dc\u00dd\7q\2\2\u00dd\u00de\7n\2\2\u00de*\3")
        buf.write("\2\2\2\u00df\u00e0\7?\2\2\u00e0,\3\2\2\2\u00e1\u00e2\7")
        buf.write("]\2\2\u00e2.\3\2\2\2\u00e3\u00e4\7_\2\2\u00e4\60\3\2\2")
        buf.write("\2\u00e5\u00e6\7,\2\2\u00e6\62\3\2\2\2\u00e7\u00e8\7A")
        buf.write("\2\2\u00e8\64\3\2\2\2\u00e9\u00ea\7<\2\2\u00ea\66\3\2")
        buf.write("\2\2\u00eb\u00ec\7~\2\2\u00ec\u00ed\7~\2\2\u00ed8\3\2")
        buf.write("\2\2\u00ee\u00ef\7(\2\2\u00ef\u00f0\7(\2\2\u00f0:\3\2")
        buf.write("\2\2\u00f1\u00f2\7?\2\2\u00f2\u00f3\7?\2\2\u00f3<\3\2")
        buf.write("\2\2\u00f4\u00f5\7#\2\2\u00f5\u00f6\7?\2\2\u00f6>\3\2")
        buf.write("\2\2\u00f7\u00f8\7>\2\2\u00f8@\3\2\2\2\u00f9\u00fa\7@")
        buf.write("\2\2\u00faB\3\2\2\2\u00fb\u00fc\7>\2\2\u00fc\u00fd\7?")
        buf.write("\2\2\u00fdD\3\2\2\2\u00fe\u00ff\7@\2\2\u00ff\u0100\7?")
        buf.write("\2\2\u0100F\3\2\2\2\u0101\u0102\7-\2\2\u0102H\3\2\2\2")
        buf.write("\u0103\u0104\7/\2\2\u0104J\3\2\2\2\u0105\u0106\7\61\2")
        buf.write("\2\u0106L\3\2\2\2\u0107\u0108\7-\2\2\u0108\u0109\7-\2")
        buf.write("\2\u0109N\3\2\2\2\u010a\u010b\7/\2\2\u010b\u010c\7/\2")
        buf.write("\2\u010cP\3\2\2\2\u010d\u010e\7(\2\2\u010eR\3\2\2\2\u010f")
        buf.write("\u0110\7#\2\2\u0110T\3\2\2\2\u0111\u0112\7,\2\2\u0112")
        buf.write("\u0113\7?\2\2\u0113V\3\2\2\2\u0114\u0115\7\61\2\2\u0115")
        buf.write("\u0116\7?\2\2\u0116X\3\2\2\2\u0117\u0118\7-\2\2\u0118")
        buf.write("\u0119\7?\2\2\u0119Z\3\2\2\2\u011a\u011b\7/\2\2\u011b")
        buf.write("\u011c\7?\2\2\u011c\\\3\2\2\2\u011d\u011f\t\2\2\2\u011e")
        buf.write("\u011d\3\2\2\2\u011f\u0120\3\2\2\2\u0120\u011e\3\2\2\2")
        buf.write("\u0120\u0121\3\2\2\2\u0121\u0122\3\2\2\2\u0122\u0123\b")
        buf.write("/\2\2\u0123^\3\2\2\2\u0124\u0126\t\3\2\2\u0125\u0124\3")
        buf.write("\2\2\2\u0126\u0127\3\2\2\2\u0127\u0125\3\2\2\2\u0127\u0128")
        buf.write("\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012a\b\60\2\2\u012a")
        buf.write("`\3\2\2\2\u012b\u012c\7\61\2\2\u012c\u012d\7\61\2\2\u012d")
        buf.write("\u0131\3\2\2\2\u012e\u0130\n\3\2\2\u012f\u012e\3\2\2\2")
        buf.write("\u0130\u0133\3\2\2\2\u0131\u012f\3\2\2\2\u0131\u0132\3")
        buf.write("\2\2\2\u0132\u0134\3\2\2\2\u0133\u0131\3\2\2\2\u0134\u0135")
        buf.write("\b\61\2\2\u0135b\3\2\2\2\u0136\u0137\7\61\2\2\u0137\u0138")
        buf.write("\7,\2\2\u0138\u013c\3\2\2\2\u0139\u013b\13\2\2\2\u013a")
        buf.write("\u0139\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013d\3\2\2\2")
        buf.write("\u013c\u013a\3\2\2\2\u013d\u013f\3\2\2\2\u013e\u013c\3")
        buf.write("\2\2\2\u013f\u0140\7,\2\2\u0140\u0141\7\61\2\2\u0141\u0142")
        buf.write("\3\2\2\2\u0142\u0143\b\62\2\2\u0143d\3\2\2\2\u0144\u0145")
        buf.write("\t\4\2\2\u0145f\3\2\2\2\u0146\u0147\t\5\2\2\u0147h\3\2")
        buf.write("\2\2\u0148\u0149\t\6\2\2\u0149j\3\2\2\2\u014a\u014b\7")
        buf.write("^\2\2\u014b\u014c\t\7\2\2\u014cl\3\2\2\2\u014d\u014f\5")
        buf.write("g\64\2\u014e\u014d\3\2\2\2\u014f\u0152\3\2\2\2\u0150\u014e")
        buf.write("\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u0153\3\2\2\2\u0152")
        buf.write("\u0150\3\2\2\2\u0153\u0157\7\60\2\2\u0154\u0156\5g\64")
        buf.write("\2\u0155\u0154\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0155")
        buf.write("\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u0163\3\2\2\2\u0159")
        buf.write("\u0157\3\2\2\2\u015a\u015c\t\b\2\2\u015b\u015d\5i\65\2")
        buf.write("\u015c\u015b\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3")
        buf.write("\2\2\2\u015e\u0160\5g\64\2\u015f\u015e\3\2\2\2\u0160\u0161")
        buf.write("\3\2\2\2\u0161\u015f\3\2\2\2\u0161\u0162\3\2\2\2\u0162")
        buf.write("\u0164\3\2\2\2\u0163\u015a\3\2\2\2\u0163\u0164\3\2\2\2")
        buf.write("\u0164n\3\2\2\2\u0165\u0167\5g\64\2\u0166\u0165\3\2\2")
        buf.write("\2\u0167\u0168\3\2\2\2\u0168\u0166\3\2\2\2\u0168\u0169")
        buf.write("\3\2\2\2\u0169p\3\2\2\2\u016a\u016d\7)\2\2\u016b\u016e")
        buf.write("\n\t\2\2\u016c\u016e\5k\66\2\u016d\u016b\3\2\2\2\u016d")
        buf.write("\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0170\7)\2\2")
        buf.write("\u0170r\3\2\2\2\u0171\u0178\7$\2\2\u0172\u0177\5k\66\2")
        buf.write("\u0173\u0177\n\n\2\2\u0174\u0175\7^\2\2\u0175\u0177\7")
        buf.write("\f\2\2\u0176\u0172\3\2\2\2\u0176\u0173\3\2\2\2\u0176\u0174")
        buf.write("\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2\2\2\u0178")
        buf.write("\u0179\3\2\2\2\u0179\u017b\3\2\2\2\u017a\u0178\3\2\2\2")
        buf.write("\u017b\u017c\7$\2\2\u017ct\3\2\2\2\u017d\u017e\7v\2\2")
        buf.write("\u017e\u017f\7t\2\2\u017f\u0180\7w\2\2\u0180\u0187\7g")
        buf.write("\2\2\u0181\u0182\7h\2\2\u0182\u0183\7c\2\2\u0183\u0184")
        buf.write("\7n\2\2\u0184\u0185\7u\2\2\u0185\u0187\7g\2\2\u0186\u017d")
        buf.write("\3\2\2\2\u0186\u0181\3\2\2\2\u0187v\3\2\2\2\u0188\u018d")
        buf.write("\5e\63\2\u0189\u018c\5e\63\2\u018a\u018c\5g\64\2\u018b")
        buf.write("\u0189\3\2\2\2\u018b\u018a\3\2\2\2\u018c\u018f\3\2\2\2")
        buf.write("\u018d\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018ex\3\2\2")
        buf.write("\2\u018f\u018d\3\2\2\2\23\2\u0120\u0127\u0131\u013c\u0150")
        buf.write("\u0157\u015c\u0161\u0163\u0168\u016d\u0176\u0178\u0186")
        buf.write("\u018b\u018d\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    Whitespace = 46
    Newline = 47
    LineComment = 48
    BlockComment = 49
    FloatingConstant = 50
    IntegerConstant = 51
    CharacterConstant = 52
    StringConstant = 53
    BoolConstant = 54
    Identifier = 55

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include <stdio.h>'", "'('", "')'", "';'", "','", "'{'", "'}'", 
            "'if'", "'else'", "'while'", "'for'", "'break'", "'continue'", 
            "'return'", "'void'", "'char'", "'int'", "'float'", "'const'", 
            "'bool'", "'='", "'['", "']'", "'*'", "'?'", "':'", "'||'", 
            "'&&'", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", 
            "'-'", "'/'", "'++'", "'--'", "'&'", "'!'", "'*='", "'/='", 
            "'+='", "'-='" ]

    symbolicNames = [ "<INVALID>",
            "Whitespace", "Newline", "LineComment", "BlockComment", "FloatingConstant", 
            "IntegerConstant", "CharacterConstant", "StringConstant", "BoolConstant", 
            "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "Whitespace", "Newline", "LineComment", "BlockComment", 
                  "Letter", "Digit", "Sign", "EscapeSequence", "FloatingConstant", 
                  "IntegerConstant", "CharacterConstant", "StringConstant", 
                  "BoolConstant", "Identifier" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


