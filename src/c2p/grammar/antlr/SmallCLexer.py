# Generated from SmallC.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2;")
        buf.write("\u0194\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3")
        buf.write("\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3")
        buf.write("\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13")
        buf.write("\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3")
        buf.write("\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.")
        buf.write("\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\62\6\62\u0128")
        buf.write("\n\62\r\62\16\62\u0129\3\62\3\62\3\63\6\63\u012f\n\63")
        buf.write("\r\63\16\63\u0130\3\63\3\63\3\64\3\64\3\64\3\64\7\64\u0139")
        buf.write("\n\64\f\64\16\64\u013c\13\64\3\64\3\64\3\65\3\65\3\65")
        buf.write("\3\65\7\65\u0144\n\65\f\65\16\65\u0147\13\65\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\66\3\66\3\67\3\67\38\38\39\39\39\3:")
        buf.write("\5:\u0158\n:\3:\7:\u015b\n:\f:\16:\u015e\13:\3:\3:\7:")
        buf.write("\u0162\n:\f:\16:\u0165\13:\3:\3:\5:\u0169\n:\3:\6:\u016c")
        buf.write("\n:\r:\16:\u016d\5:\u0170\n:\3;\5;\u0173\n;\3;\6;\u0176")
        buf.write("\n;\r;\16;\u0177\3<\3<\3<\5<\u017d\n<\3<\3<\3=\3=\3=\3")
        buf.write("=\3=\7=\u0186\n=\f=\16=\u0189\13=\3=\3=\3>\3>\3>\7>\u0190")
        buf.write("\n>\f>\16>\u0193\13>\3\u0145\2?\3\3\5\4\7\5\t\6\13\7\r")
        buf.write("\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!")
        buf.write("\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61")
        buf.write("a\62c\63e\64g\65i\66k\2m\2o\2q\2s\67u8w9y:{;\3\2\13\4")
        buf.write("\2\13\13\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\4\2--//")
        buf.write("\f\2$$))AA^^cdhhppttvvxx\4\2GGgg\5\2\f\f))^^\5\2\f\f$")
        buf.write("$^^\u01a1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2")
        buf.write("w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3}\3\2\2\2\5\u0090\3\2")
        buf.write("\2\2\7\u0092\3\2\2\2\t\u0094\3\2\2\2\13\u0096\3\2\2\2")
        buf.write("\r\u0098\3\2\2\2\17\u009a\3\2\2\2\21\u009d\3\2\2\2\23")
        buf.write("\u00a2\3\2\2\2\25\u00a8\3\2\2\2\27\u00ac\3\2\2\2\31\u00ae")
        buf.write("\3\2\2\2\33\u00b4\3\2\2\2\35\u00bd\3\2\2\2\37\u00c4\3")
        buf.write("\2\2\2!\u00c6\3\2\2\2#\u00c8\3\2\2\2%\u00ca\3\2\2\2\'")
        buf.write("\u00cc\3\2\2\2)\u00d1\3\2\2\2+\u00d6\3\2\2\2-\u00da\3")
        buf.write("\2\2\2/\u00e0\3\2\2\2\61\u00e6\3\2\2\2\63\u00e8\3\2\2")
        buf.write("\2\65\u00ea\3\2\2\2\67\u00ed\3\2\2\29\u00f0\3\2\2\2;\u00f3")
        buf.write("\3\2\2\2=\u00f6\3\2\2\2?\u00f8\3\2\2\2A\u00fa\3\2\2\2")
        buf.write("C\u00fd\3\2\2\2E\u0100\3\2\2\2G\u0102\3\2\2\2I\u0104\3")
        buf.write("\2\2\2K\u0106\3\2\2\2M\u0108\3\2\2\2O\u010b\3\2\2\2Q\u010e")
        buf.write("\3\2\2\2S\u0110\3\2\2\2U\u0112\3\2\2\2W\u0114\3\2\2\2")
        buf.write("Y\u0117\3\2\2\2[\u011a\3\2\2\2]\u011d\3\2\2\2_\u0120\3")
        buf.write("\2\2\2a\u0123\3\2\2\2c\u0127\3\2\2\2e\u012e\3\2\2\2g\u0134")
        buf.write("\3\2\2\2i\u013f\3\2\2\2k\u014d\3\2\2\2m\u014f\3\2\2\2")
        buf.write("o\u0151\3\2\2\2q\u0153\3\2\2\2s\u0157\3\2\2\2u\u0172\3")
        buf.write("\2\2\2w\u0179\3\2\2\2y\u0180\3\2\2\2{\u018c\3\2\2\2}~")
        buf.write("\7%\2\2~\177\7k\2\2\177\u0080\7p\2\2\u0080\u0081\7e\2")
        buf.write("\2\u0081\u0082\7n\2\2\u0082\u0083\7w\2\2\u0083\u0084\7")
        buf.write("f\2\2\u0084\u0085\7g\2\2\u0085\u0086\7\"\2\2\u0086\u0087")
        buf.write("\7>\2\2\u0087\u0088\7u\2\2\u0088\u0089\7v\2\2\u0089\u008a")
        buf.write("\7f\2\2\u008a\u008b\7k\2\2\u008b\u008c\7q\2\2\u008c\u008d")
        buf.write("\7\60\2\2\u008d\u008e\7j\2\2\u008e\u008f\7@\2\2\u008f")
        buf.write("\4\3\2\2\2\u0090\u0091\7*\2\2\u0091\6\3\2\2\2\u0092\u0093")
        buf.write("\7+\2\2\u0093\b\3\2\2\2\u0094\u0095\7.\2\2\u0095\n\3\2")
        buf.write("\2\2\u0096\u0097\7}\2\2\u0097\f\3\2\2\2\u0098\u0099\7")
        buf.write("\177\2\2\u0099\16\3\2\2\2\u009a\u009b\7k\2\2\u009b\u009c")
        buf.write("\7h\2\2\u009c\20\3\2\2\2\u009d\u009e\7g\2\2\u009e\u009f")
        buf.write("\7n\2\2\u009f\u00a0\7u\2\2\u00a0\u00a1\7g\2\2\u00a1\22")
        buf.write("\3\2\2\2\u00a2\u00a3\7y\2\2\u00a3\u00a4\7j\2\2\u00a4\u00a5")
        buf.write("\7k\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7\7g\2\2\u00a7\24")
        buf.write("\3\2\2\2\u00a8\u00a9\7h\2\2\u00a9\u00aa\7q\2\2\u00aa\u00ab")
        buf.write("\7t\2\2\u00ab\26\3\2\2\2\u00ac\u00ad\7=\2\2\u00ad\30\3")
        buf.write("\2\2\2\u00ae\u00af\7d\2\2\u00af\u00b0\7t\2\2\u00b0\u00b1")
        buf.write("\7g\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3\7m\2\2\u00b3\32")
        buf.write("\3\2\2\2\u00b4\u00b5\7e\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7")
        buf.write("\7p\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba")
        buf.write("\7p\2\2\u00ba\u00bb\7w\2\2\u00bb\u00bc\7g\2\2\u00bc\34")
        buf.write("\3\2\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7g\2\2\u00bf\u00c0")
        buf.write("\7v\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2\7t\2\2\u00c2\u00c3")
        buf.write("\7p\2\2\u00c3\36\3\2\2\2\u00c4\u00c5\7?\2\2\u00c5 \3\2")
        buf.write("\2\2\u00c6\u00c7\7]\2\2\u00c7\"\3\2\2\2\u00c8\u00c9\7")
        buf.write("_\2\2\u00c9$\3\2\2\2\u00ca\u00cb\7,\2\2\u00cb&\3\2\2\2")
        buf.write("\u00cc\u00cd\7x\2\2\u00cd\u00ce\7q\2\2\u00ce\u00cf\7k")
        buf.write("\2\2\u00cf\u00d0\7f\2\2\u00d0(\3\2\2\2\u00d1\u00d2\7e")
        buf.write("\2\2\u00d2\u00d3\7j\2\2\u00d3\u00d4\7c\2\2\u00d4\u00d5")
        buf.write("\7t\2\2\u00d5*\3\2\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8")
        buf.write("\7p\2\2\u00d8\u00d9\7v\2\2\u00d9,\3\2\2\2\u00da\u00db")
        buf.write("\7h\2\2\u00db\u00dc\7n\2\2\u00dc\u00dd\7q\2\2\u00dd\u00de")
        buf.write("\7c\2\2\u00de\u00df\7v\2\2\u00df.\3\2\2\2\u00e0\u00e1")
        buf.write("\7e\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4")
        buf.write("\7u\2\2\u00e4\u00e5\7v\2\2\u00e5\60\3\2\2\2\u00e6\u00e7")
        buf.write("\7A\2\2\u00e7\62\3\2\2\2\u00e8\u00e9\7<\2\2\u00e9\64\3")
        buf.write("\2\2\2\u00ea\u00eb\7~\2\2\u00eb\u00ec\7~\2\2\u00ec\66")
        buf.write("\3\2\2\2\u00ed\u00ee\7(\2\2\u00ee\u00ef\7(\2\2\u00ef8")
        buf.write("\3\2\2\2\u00f0\u00f1\7?\2\2\u00f1\u00f2\7?\2\2\u00f2:")
        buf.write("\3\2\2\2\u00f3\u00f4\7#\2\2\u00f4\u00f5\7?\2\2\u00f5<")
        buf.write("\3\2\2\2\u00f6\u00f7\7>\2\2\u00f7>\3\2\2\2\u00f8\u00f9")
        buf.write("\7@\2\2\u00f9@\3\2\2\2\u00fa\u00fb\7>\2\2\u00fb\u00fc")
        buf.write("\7?\2\2\u00fcB\3\2\2\2\u00fd\u00fe\7@\2\2\u00fe\u00ff")
        buf.write("\7?\2\2\u00ffD\3\2\2\2\u0100\u0101\7-\2\2\u0101F\3\2\2")
        buf.write("\2\u0102\u0103\7/\2\2\u0103H\3\2\2\2\u0104\u0105\7\61")
        buf.write("\2\2\u0105J\3\2\2\2\u0106\u0107\7\'\2\2\u0107L\3\2\2\2")
        buf.write("\u0108\u0109\7-\2\2\u0109\u010a\7-\2\2\u010aN\3\2\2\2")
        buf.write("\u010b\u010c\7/\2\2\u010c\u010d\7/\2\2\u010dP\3\2\2\2")
        buf.write("\u010e\u010f\7(\2\2\u010fR\3\2\2\2\u0110\u0111\7#\2\2")
        buf.write("\u0111T\3\2\2\2\u0112\u0113\7\60\2\2\u0113V\3\2\2\2\u0114")
        buf.write("\u0115\7/\2\2\u0115\u0116\7@\2\2\u0116X\3\2\2\2\u0117")
        buf.write("\u0118\7,\2\2\u0118\u0119\7?\2\2\u0119Z\3\2\2\2\u011a")
        buf.write("\u011b\7\61\2\2\u011b\u011c\7?\2\2\u011c\\\3\2\2\2\u011d")
        buf.write("\u011e\7\'\2\2\u011e\u011f\7?\2\2\u011f^\3\2\2\2\u0120")
        buf.write("\u0121\7-\2\2\u0121\u0122\7?\2\2\u0122`\3\2\2\2\u0123")
        buf.write("\u0124\7/\2\2\u0124\u0125\7?\2\2\u0125b\3\2\2\2\u0126")
        buf.write("\u0128\t\2\2\2\u0127\u0126\3\2\2\2\u0128\u0129\3\2\2\2")
        buf.write("\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a\u012b\3")
        buf.write("\2\2\2\u012b\u012c\b\62\2\2\u012cd\3\2\2\2\u012d\u012f")
        buf.write("\t\3\2\2\u012e\u012d\3\2\2\2\u012f\u0130\3\2\2\2\u0130")
        buf.write("\u012e\3\2\2\2\u0130\u0131\3\2\2\2\u0131\u0132\3\2\2\2")
        buf.write("\u0132\u0133\b\63\2\2\u0133f\3\2\2\2\u0134\u0135\7\61")
        buf.write("\2\2\u0135\u0136\7\61\2\2\u0136\u013a\3\2\2\2\u0137\u0139")
        buf.write("\n\3\2\2\u0138\u0137\3\2\2\2\u0139\u013c\3\2\2\2\u013a")
        buf.write("\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b\u013d\3\2\2\2")
        buf.write("\u013c\u013a\3\2\2\2\u013d\u013e\b\64\2\2\u013eh\3\2\2")
        buf.write("\2\u013f\u0140\7\61\2\2\u0140\u0141\7,\2\2\u0141\u0145")
        buf.write("\3\2\2\2\u0142\u0144\13\2\2\2\u0143\u0142\3\2\2\2\u0144")
        buf.write("\u0147\3\2\2\2\u0145\u0146\3\2\2\2\u0145\u0143\3\2\2\2")
        buf.write("\u0146\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148\u0149\7")
        buf.write(",\2\2\u0149\u014a\7\61\2\2\u014a\u014b\3\2\2\2\u014b\u014c")
        buf.write("\b\65\2\2\u014cj\3\2\2\2\u014d\u014e\t\4\2\2\u014el\3")
        buf.write("\2\2\2\u014f\u0150\t\5\2\2\u0150n\3\2\2\2\u0151\u0152")
        buf.write("\t\6\2\2\u0152p\3\2\2\2\u0153\u0154\7^\2\2\u0154\u0155")
        buf.write("\t\7\2\2\u0155r\3\2\2\2\u0156\u0158\5o8\2\u0157\u0156")
        buf.write("\3\2\2\2\u0157\u0158\3\2\2\2\u0158\u015c\3\2\2\2\u0159")
        buf.write("\u015b\5m\67\2\u015a\u0159\3\2\2\2\u015b\u015e\3\2\2\2")
        buf.write("\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3")
        buf.write("\2\2\2\u015e\u015c\3\2\2\2\u015f\u0163\7\60\2\2\u0160")
        buf.write("\u0162\5m\67\2\u0161\u0160\3\2\2\2\u0162\u0165\3\2\2\2")
        buf.write("\u0163\u0161\3\2\2\2\u0163\u0164\3\2\2\2\u0164\u016f\3")
        buf.write("\2\2\2\u0165\u0163\3\2\2\2\u0166\u0168\t\b\2\2\u0167\u0169")
        buf.write("\5o8\2\u0168\u0167\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u016b")
        buf.write("\3\2\2\2\u016a\u016c\5m\67\2\u016b\u016a\3\2\2\2\u016c")
        buf.write("\u016d\3\2\2\2\u016d\u016b\3\2\2\2\u016d\u016e\3\2\2\2")
        buf.write("\u016e\u0170\3\2\2\2\u016f\u0166\3\2\2\2\u016f\u0170\3")
        buf.write("\2\2\2\u0170t\3\2\2\2\u0171\u0173\5o8\2\u0172\u0171\3")
        buf.write("\2\2\2\u0172\u0173\3\2\2\2\u0173\u0175\3\2\2\2\u0174\u0176")
        buf.write("\5m\67\2\u0175\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177")
        buf.write("\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178v\3\2\2\2\u0179")
        buf.write("\u017c\7)\2\2\u017a\u017d\n\t\2\2\u017b\u017d\5q9\2\u017c")
        buf.write("\u017a\3\2\2\2\u017c\u017b\3\2\2\2\u017d\u017e\3\2\2\2")
        buf.write("\u017e\u017f\7)\2\2\u017fx\3\2\2\2\u0180\u0187\7$\2\2")
        buf.write("\u0181\u0186\5q9\2\u0182\u0186\n\n\2\2\u0183\u0184\7^")
        buf.write("\2\2\u0184\u0186\7\f\2\2\u0185\u0181\3\2\2\2\u0185\u0182")
        buf.write("\3\2\2\2\u0185\u0183\3\2\2\2\u0186\u0189\3\2\2\2\u0187")
        buf.write("\u0185\3\2\2\2\u0187\u0188\3\2\2\2\u0188\u018a\3\2\2\2")
        buf.write("\u0189\u0187\3\2\2\2\u018a\u018b\7$\2\2\u018bz\3\2\2\2")
        buf.write("\u018c\u0191\5k\66\2\u018d\u0190\5k\66\2\u018e\u0190\5")
        buf.write("m\67\2\u018f\u018d\3\2\2\2\u018f\u018e\3\2\2\2\u0190\u0193")
        buf.write("\3\2\2\2\u0191\u018f\3\2\2\2\u0191\u0192\3\2\2\2\u0192")
        buf.write("|\3\2\2\2\u0193\u0191\3\2\2\2\24\2\u0129\u0130\u013a\u0145")
        buf.write("\u0157\u015c\u0163\u0168\u016d\u016f\u0172\u0177\u017c")
        buf.write("\u0185\u0187\u018f\u0191\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    Whitespace = 49
    Newline = 50
    LineComment = 51
    BlockComment = 52
    FloatingConstant = 53
    IntegerConstant = 54
    CharacterConstant = 55
    StringConstant = 56
    Identifier = 57

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include <stdio.h>'", "'('", "')'", "','", "'{'", "'}'", "'if'", 
            "'else'", "'while'", "'for'", "';'", "'break'", "'continue'", 
            "'return'", "'='", "'['", "']'", "'*'", "'void'", "'char'", 
            "'int'", "'float'", "'const'", "'?'", "':'", "'||'", "'&&'", 
            "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", 
            "'/'", "'%'", "'++'", "'--'", "'&'", "'!'", "'.'", "'->'", "'*='", 
            "'/='", "'%='", "'+='", "'-='" ]

    symbolicNames = [ "<INVALID>",
            "Whitespace", "Newline", "LineComment", "BlockComment", "FloatingConstant", 
            "IntegerConstant", "CharacterConstant", "StringConstant", "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "Whitespace", "Newline", 
                  "LineComment", "BlockComment", "Letter", "Digit", "Sign", 
                  "EscapeSequence", "FloatingConstant", "IntegerConstant", 
                  "CharacterConstant", "StringConstant", "Identifier" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


