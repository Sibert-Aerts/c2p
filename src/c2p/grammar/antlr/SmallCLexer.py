# Generated from SmallC.g4 by ANTLR 4.6
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\67")
        buf.write("\u017c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6")
        buf.write("\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#")
        buf.write("\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3\'\3(\3(\3)\3)\3*\3*\3")
        buf.write("*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\6.\u0116\n.\r.\16.\u0117")
        buf.write("\3.\3.\3/\6/\u011d\n/\r/\16/\u011e\3/\3/\3\60\3\60\3\60")
        buf.write("\3\60\7\60\u0127\n\60\f\60\16\60\u012a\13\60\3\60\3\60")
        buf.write("\3\61\3\61\3\61\3\61\7\61\u0132\n\61\f\61\16\61\u0135")
        buf.write("\13\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\63\3\63\3")
        buf.write("\64\3\64\3\65\3\65\3\65\3\66\7\66\u0146\n\66\f\66\16\66")
        buf.write("\u0149\13\66\3\66\3\66\7\66\u014d\n\66\f\66\16\66\u0150")
        buf.write("\13\66\3\66\3\66\5\66\u0154\n\66\3\66\6\66\u0157\n\66")
        buf.write("\r\66\16\66\u0158\5\66\u015b\n\66\3\67\6\67\u015e\n\67")
        buf.write("\r\67\16\67\u015f\38\38\38\58\u0165\n8\38\38\39\39\39")
        buf.write("\39\39\79\u016e\n9\f9\169\u0171\139\39\39\3:\3:\3:\7:")
        buf.write("\u0178\n:\f:\16:\u017b\13:\3\u0133\2;\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60")
        buf.write("_\61a\62c\2e\2g\2i\2k\63m\64o\65q\66s\67\3\2\13\4\2\13")
        buf.write("\13\"\"\4\2\f\f\17\17\5\2C\\aac|\3\2\62;\4\2--//\f\2$")
        buf.write("$))AA^^cdhhppttvvxx\4\2GGgg\5\2\f\f))^^\5\2\f\f$$^^\u0187")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3")
        buf.write("\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5\u0088\3\2\2")
        buf.write("\2\7\u008a\3\2\2\2\t\u008c\3\2\2\2\13\u008e\3\2\2\2\r")
        buf.write("\u0090\3\2\2\2\17\u0092\3\2\2\2\21\u0095\3\2\2\2\23\u009a")
        buf.write("\3\2\2\2\25\u00a0\3\2\2\2\27\u00a4\3\2\2\2\31\u00a6\3")
        buf.write("\2\2\2\33\u00ac\3\2\2\2\35\u00b5\3\2\2\2\37\u00bc\3\2")
        buf.write("\2\2!\u00c1\3\2\2\2#\u00c6\3\2\2\2%\u00ca\3\2\2\2\'\u00d0")
        buf.write("\3\2\2\2)\u00d6\3\2\2\2+\u00d8\3\2\2\2-\u00da\3\2\2\2")
        buf.write("/\u00dc\3\2\2\2\61\u00de\3\2\2\2\63\u00e0\3\2\2\2\65\u00e2")
        buf.write("\3\2\2\2\67\u00e5\3\2\2\29\u00e8\3\2\2\2;\u00eb\3\2\2")
        buf.write("\2=\u00ee\3\2\2\2?\u00f0\3\2\2\2A\u00f2\3\2\2\2C\u00f5")
        buf.write("\3\2\2\2E\u00f8\3\2\2\2G\u00fa\3\2\2\2I\u00fc\3\2\2\2")
        buf.write("K\u00fe\3\2\2\2M\u0101\3\2\2\2O\u0104\3\2\2\2Q\u0106\3")
        buf.write("\2\2\2S\u0108\3\2\2\2U\u010b\3\2\2\2W\u010e\3\2\2\2Y\u0111")
        buf.write("\3\2\2\2[\u0115\3\2\2\2]\u011c\3\2\2\2_\u0122\3\2\2\2")
        buf.write("a\u012d\3\2\2\2c\u013b\3\2\2\2e\u013d\3\2\2\2g\u013f\3")
        buf.write("\2\2\2i\u0141\3\2\2\2k\u0147\3\2\2\2m\u015d\3\2\2\2o\u0161")
        buf.write("\3\2\2\2q\u0168\3\2\2\2s\u0174\3\2\2\2uv\7%\2\2vw\7k\2")
        buf.write("\2wx\7p\2\2xy\7e\2\2yz\7n\2\2z{\7w\2\2{|\7f\2\2|}\7g\2")
        buf.write("\2}~\7\"\2\2~\177\7>\2\2\177\u0080\7u\2\2\u0080\u0081")
        buf.write("\7v\2\2\u0081\u0082\7f\2\2\u0082\u0083\7k\2\2\u0083\u0084")
        buf.write("\7q\2\2\u0084\u0085\7\60\2\2\u0085\u0086\7j\2\2\u0086")
        buf.write("\u0087\7@\2\2\u0087\4\3\2\2\2\u0088\u0089\7*\2\2\u0089")
        buf.write("\6\3\2\2\2\u008a\u008b\7+\2\2\u008b\b\3\2\2\2\u008c\u008d")
        buf.write("\7.\2\2\u008d\n\3\2\2\2\u008e\u008f\7}\2\2\u008f\f\3\2")
        buf.write("\2\2\u0090\u0091\7\177\2\2\u0091\16\3\2\2\2\u0092\u0093")
        buf.write("\7k\2\2\u0093\u0094\7h\2\2\u0094\20\3\2\2\2\u0095\u0096")
        buf.write("\7g\2\2\u0096\u0097\7n\2\2\u0097\u0098\7u\2\2\u0098\u0099")
        buf.write("\7g\2\2\u0099\22\3\2\2\2\u009a\u009b\7y\2\2\u009b\u009c")
        buf.write("\7j\2\2\u009c\u009d\7k\2\2\u009d\u009e\7n\2\2\u009e\u009f")
        buf.write("\7g\2\2\u009f\24\3\2\2\2\u00a0\u00a1\7h\2\2\u00a1\u00a2")
        buf.write("\7q\2\2\u00a2\u00a3\7t\2\2\u00a3\26\3\2\2\2\u00a4\u00a5")
        buf.write("\7=\2\2\u00a5\30\3\2\2\2\u00a6\u00a7\7d\2\2\u00a7\u00a8")
        buf.write("\7t\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7c\2\2\u00aa\u00ab")
        buf.write("\7m\2\2\u00ab\32\3\2\2\2\u00ac\u00ad\7e\2\2\u00ad\u00ae")
        buf.write("\7q\2\2\u00ae\u00af\7p\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1")
        buf.write("\7k\2\2\u00b1\u00b2\7p\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4")
        buf.write("\7g\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7")
        buf.write("\7g\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7w\2\2\u00b9\u00ba")
        buf.write("\7t\2\2\u00ba\u00bb\7p\2\2\u00bb\36\3\2\2\2\u00bc\u00bd")
        buf.write("\7x\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7k\2\2\u00bf\u00c0")
        buf.write("\7f\2\2\u00c0 \3\2\2\2\u00c1\u00c2\7e\2\2\u00c2\u00c3")
        buf.write("\7j\2\2\u00c3\u00c4\7c\2\2\u00c4\u00c5\7t\2\2\u00c5\"")
        buf.write("\3\2\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8\u00c9")
        buf.write("\7v\2\2\u00c9$\3\2\2\2\u00ca\u00cb\7h\2\2\u00cb\u00cc")
        buf.write("\7n\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7c\2\2\u00ce\u00cf")
        buf.write("\7v\2\2\u00cf&\3\2\2\2\u00d0\u00d1\7e\2\2\u00d1\u00d2")
        buf.write("\7q\2\2\u00d2\u00d3\7p\2\2\u00d3\u00d4\7u\2\2\u00d4\u00d5")
        buf.write("\7v\2\2\u00d5(\3\2\2\2\u00d6\u00d7\7?\2\2\u00d7*\3\2\2")
        buf.write("\2\u00d8\u00d9\7]\2\2\u00d9,\3\2\2\2\u00da\u00db\7_\2")
        buf.write("\2\u00db.\3\2\2\2\u00dc\u00dd\7,\2\2\u00dd\60\3\2\2\2")
        buf.write("\u00de\u00df\7A\2\2\u00df\62\3\2\2\2\u00e0\u00e1\7<\2")
        buf.write("\2\u00e1\64\3\2\2\2\u00e2\u00e3\7~\2\2\u00e3\u00e4\7~")
        buf.write("\2\2\u00e4\66\3\2\2\2\u00e5\u00e6\7(\2\2\u00e6\u00e7\7")
        buf.write("(\2\2\u00e78\3\2\2\2\u00e8\u00e9\7?\2\2\u00e9\u00ea\7")
        buf.write("?\2\2\u00ea:\3\2\2\2\u00eb\u00ec\7#\2\2\u00ec\u00ed\7")
        buf.write("?\2\2\u00ed<\3\2\2\2\u00ee\u00ef\7>\2\2\u00ef>\3\2\2\2")
        buf.write("\u00f0\u00f1\7@\2\2\u00f1@\3\2\2\2\u00f2\u00f3\7>\2\2")
        buf.write("\u00f3\u00f4\7?\2\2\u00f4B\3\2\2\2\u00f5\u00f6\7@\2\2")
        buf.write("\u00f6\u00f7\7?\2\2\u00f7D\3\2\2\2\u00f8\u00f9\7-\2\2")
        buf.write("\u00f9F\3\2\2\2\u00fa\u00fb\7/\2\2\u00fbH\3\2\2\2\u00fc")
        buf.write("\u00fd\7\61\2\2\u00fdJ\3\2\2\2\u00fe\u00ff\7-\2\2\u00ff")
        buf.write("\u0100\7-\2\2\u0100L\3\2\2\2\u0101\u0102\7/\2\2\u0102")
        buf.write("\u0103\7/\2\2\u0103N\3\2\2\2\u0104\u0105\7(\2\2\u0105")
        buf.write("P\3\2\2\2\u0106\u0107\7#\2\2\u0107R\3\2\2\2\u0108\u0109")
        buf.write("\7,\2\2\u0109\u010a\7?\2\2\u010aT\3\2\2\2\u010b\u010c")
        buf.write("\7\61\2\2\u010c\u010d\7?\2\2\u010dV\3\2\2\2\u010e\u010f")
        buf.write("\7-\2\2\u010f\u0110\7?\2\2\u0110X\3\2\2\2\u0111\u0112")
        buf.write("\7/\2\2\u0112\u0113\7?\2\2\u0113Z\3\2\2\2\u0114\u0116")
        buf.write("\t\2\2\2\u0115\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117")
        buf.write("\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u0119\3\2\2\2")
        buf.write("\u0119\u011a\b.\2\2\u011a\\\3\2\2\2\u011b\u011d\t\3\2")
        buf.write("\2\u011c\u011b\3\2\2\2\u011d\u011e\3\2\2\2\u011e\u011c")
        buf.write("\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0120\3\2\2\2\u0120")
        buf.write("\u0121\b/\2\2\u0121^\3\2\2\2\u0122\u0123\7\61\2\2\u0123")
        buf.write("\u0124\7\61\2\2\u0124\u0128\3\2\2\2\u0125\u0127\n\3\2")
        buf.write("\2\u0126\u0125\3\2\2\2\u0127\u012a\3\2\2\2\u0128\u0126")
        buf.write("\3\2\2\2\u0128\u0129\3\2\2\2\u0129\u012b\3\2\2\2\u012a")
        buf.write("\u0128\3\2\2\2\u012b\u012c\b\60\2\2\u012c`\3\2\2\2\u012d")
        buf.write("\u012e\7\61\2\2\u012e\u012f\7,\2\2\u012f\u0133\3\2\2\2")
        buf.write("\u0130\u0132\13\2\2\2\u0131\u0130\3\2\2\2\u0132\u0135")
        buf.write("\3\2\2\2\u0133\u0134\3\2\2\2\u0133\u0131\3\2\2\2\u0134")
        buf.write("\u0136\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u0137\7,\2\2")
        buf.write("\u0137\u0138\7\61\2\2\u0138\u0139\3\2\2\2\u0139\u013a")
        buf.write("\b\61\2\2\u013ab\3\2\2\2\u013b\u013c\t\4\2\2\u013cd\3")
        buf.write("\2\2\2\u013d\u013e\t\5\2\2\u013ef\3\2\2\2\u013f\u0140")
        buf.write("\t\6\2\2\u0140h\3\2\2\2\u0141\u0142\7^\2\2\u0142\u0143")
        buf.write("\t\7\2\2\u0143j\3\2\2\2\u0144\u0146\5e\63\2\u0145\u0144")
        buf.write("\3\2\2\2\u0146\u0149\3\2\2\2\u0147\u0145\3\2\2\2\u0147")
        buf.write("\u0148\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u0147\3\2\2\2")
        buf.write("\u014a\u014e\7\60\2\2\u014b\u014d\5e\63\2\u014c\u014b")
        buf.write("\3\2\2\2\u014d\u0150\3\2\2\2\u014e\u014c\3\2\2\2\u014e")
        buf.write("\u014f\3\2\2\2\u014f\u015a\3\2\2\2\u0150\u014e\3\2\2\2")
        buf.write("\u0151\u0153\t\b\2\2\u0152\u0154\5g\64\2\u0153\u0152\3")
        buf.write("\2\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2\2\2\u0155\u0157")
        buf.write("\5e\63\2\u0156\u0155\3\2\2\2\u0157\u0158\3\2\2\2\u0158")
        buf.write("\u0156\3\2\2\2\u0158\u0159\3\2\2\2\u0159\u015b\3\2\2\2")
        buf.write("\u015a\u0151\3\2\2\2\u015a\u015b\3\2\2\2\u015bl\3\2\2")
        buf.write("\2\u015c\u015e\5e\63\2\u015d\u015c\3\2\2\2\u015e\u015f")
        buf.write("\3\2\2\2\u015f\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160")
        buf.write("n\3\2\2\2\u0161\u0164\7)\2\2\u0162\u0165\n\t\2\2\u0163")
        buf.write("\u0165\5i\65\2\u0164\u0162\3\2\2\2\u0164\u0163\3\2\2\2")
        buf.write("\u0165\u0166\3\2\2\2\u0166\u0167\7)\2\2\u0167p\3\2\2\2")
        buf.write("\u0168\u016f\7$\2\2\u0169\u016e\5i\65\2\u016a\u016e\n")
        buf.write("\n\2\2\u016b\u016c\7^\2\2\u016c\u016e\7\f\2\2\u016d\u0169")
        buf.write("\3\2\2\2\u016d\u016a\3\2\2\2\u016d\u016b\3\2\2\2\u016e")
        buf.write("\u0171\3\2\2\2\u016f\u016d\3\2\2\2\u016f\u0170\3\2\2\2")
        buf.write("\u0170\u0172\3\2\2\2\u0171\u016f\3\2\2\2\u0172\u0173\7")
        buf.write("$\2\2\u0173r\3\2\2\2\u0174\u0179\5c\62\2\u0175\u0178\5")
        buf.write("c\62\2\u0176\u0178\5e\63\2\u0177\u0175\3\2\2\2\u0177\u0176")
        buf.write("\3\2\2\2\u0178\u017b\3\2\2\2\u0179\u0177\3\2\2\2\u0179")
        buf.write("\u017a\3\2\2\2\u017at\3\2\2\2\u017b\u0179\3\2\2\2\22\2")
        buf.write("\u0117\u011e\u0128\u0133\u0147\u014e\u0153\u0158\u015a")
        buf.write("\u015f\u0164\u016d\u016f\u0177\u0179\3\b\2\2")
        return buf.getvalue()


class SmallCLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    Whitespace = 45
    Newline = 46
    LineComment = 47
    BlockComment = 48
    FloatingConstant = 49
    IntegerConstant = 50
    CharacterConstant = 51
    StringConstant = 52
    Identifier = 53

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'#include <stdio.h>'", "'('", "')'", "','", "'{'", "'}'", "'if'", 
            "'else'", "'while'", "'for'", "';'", "'break'", "'continue'", 
            "'return'", "'void'", "'char'", "'int'", "'float'", "'const'", 
            "'='", "'['", "']'", "'*'", "'?'", "':'", "'||'", "'&&'", "'=='", 
            "'!='", "'<'", "'>'", "'<='", "'>='", "'+'", "'-'", "'/'", "'++'", 
            "'--'", "'&'", "'!'", "'*='", "'/='", "'+='", "'-='" ]

    symbolicNames = [ "<INVALID>",
            "Whitespace", "Newline", "LineComment", "BlockComment", "FloatingConstant", 
            "IntegerConstant", "CharacterConstant", "StringConstant", "Identifier" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "Whitespace", "Newline", "LineComment", "BlockComment", 
                  "Letter", "Digit", "Sign", "EscapeSequence", "FloatingConstant", 
                  "IntegerConstant", "CharacterConstant", "StringConstant", 
                  "Identifier" ]

    grammarFileName = "SmallC.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.6")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


